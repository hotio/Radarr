---
kind: pipeline
name: checks

trigger:
  event:
    - push

steps:
- name: shellcheck
  image: koalaman/shellcheck-alpine
  pull: always
  commands:
    - shellcheck --version
    - for file in $(find ./root -type f); do echo $file; shellcheck $file; done;

---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}

depends_on:
  - checks

---
kind: pipeline
name: linux-amd64-test

clone:
  disable: true

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: test
  image: ${DRONE_REPO_OWNER}/base
  pull: always
  commands:
    - sleep 60
    - curl -fsSL service:7878

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always

depends_on:
  - linux-amd64

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}

depends_on:
  - checks

---
kind: pipeline
name: linux-arm64-test

clone:
  disable: true

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: test
  image: ${DRONE_REPO_OWNER}/base
  pull: always
  commands:
    - sleep 60
    - curl -fsSL service:7878

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always

depends_on:
  - linux-arm64

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}

depends_on:
  - checks

---
kind: pipeline
name: linux-arm-test

clone:
  disable: true

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: test
  image: ${DRONE_REPO_OWNER}/base
  pull: always
  commands:
    - sleep 60
    - curl -fsSL service:7878

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always

depends_on:
  - linux-arm

---
kind: pipeline
name: manifest

clone:
  disable: true

trigger:
  event:
    - push

steps:
- name: latest
  when:
    branch:
      - stable
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:latest
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-commit
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-version
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${TAG_VERSION=0.2.0.1358}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

depends_on:
  - linux-amd64-test
  - linux-arm64-test
  - linux-arm-test

---
kind: pipeline
name: discord

clone:
  disable: true

trigger:
  status:
  - success
  - failure

steps:
- name: notification
  image: appleboy/drone-discord
  settings:
    webhook_id:
      from_secret: discord_id
    webhook_token:
      from_secret: discord_token
    message: "{{#success build.status}} ✅  Build [#{{build.number}}]({{build.link}}) of `{{repo.namespace}}/{{repo.name}}` succeeded.\n\nCommit [{{truncate commit.sha 7}}]({{commit.link}}) by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ``` {{else}} ❌  Build [#{{build.number}}]({{build.link}}) of `{{repo.namespace}}/{{repo.name}}` failed.\n\nCommit [{{truncate commit.sha 7}}]({{commit.link}}) by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ``` {{/success}}\n"

depends_on:
  - manifest
